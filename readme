# File Upload & Management System
# Website Link: https://filedrive-abye.onrender.com/

Welcome to the **File Upload & Management System**, a secure and user-friendly web application built with Flask. This app allows users to sign up, log in, upload files (images/PDFs), search, download, and delete files, with features like email-based password reset and AWS S3 integration for persistent storage.

## Table of Contents
- [Features](#features)
- [Tech Stack](#tech-stack)
- [Installation](#installation)
- [Usage](#usage)
- [Deployment](#deployment)
- [Environment Variables](#environment-variables)
- [File Structure](#file-structure)
- [S3 Bucket Details](#s3-bucket-details)
- [Contributing](#contributing)
- [License](#license)
- [Contact](#contact)

## Features
- **User Authentication**: Secure signup and login with password hashing.
- **File Management**: Upload, download, delete, and search files (supports JPG, JPEG, PNG, GIF, PDF).
- **File Details**: Track file size, type, upload date (IST), and download count.
- **Password Reset**: Forgot password with 6-digit OTP sent via email (valid for 5 minutes).
- **Responsive Design**: Basic Bootstrap-based UI.
- **AWS S3 Integration**: Persistent storage in Europe (Stockholm) eu-north-1 region.
- **Security**: Session management, email validation, and MongoDB integration.

## Tech Stack
- **Backend**: Flask (Python)
- **Database**: MongoDB (Atlas)
- **Forms**: Flask-WTF
- **File Handling**: Flask-Uploads, Boto3 (S3)
- **Email**: Flask-Mail (Gmail SMTP)
- **Dependencies**: PyMongo, Bcrypt, Pytz, Werkzeug, UUID
- **Frontend**: HTML, Bootstrap 5
- **Deployment**: Render.com

## Installation

### Prerequisites
- Python 3.8+
- Git
- MongoDB Atlas account
- AWS S3 bucket
- Gmail account (for OTP emails)
- Render account (for deployment)

### Steps
1. **Clone the Repository**
   ```bash
   git clone https://github.com/itsRajneesh/FileDrive
   cd FileDrive

Install Dependencies
bashpython -m venv venv
source venv/bin/activate  # On Windows: venv\Scripts\activate
pip install -r requirements.txt

Configure Environment Variables
Create a .env file in the project root:
textDB_USER=your_mongodb_username
DB_PASS=your_mongodb_password
DB_CLUSTER=your_cluster.mongodb.net
DB_NAME=file_manager_db
EMAIL_USER=your_gmail@gmail.com
EMAIL_PASS=your_app_specific_password
SECRET_KEY=your_secret_key
AWS_ACCESS_KEY_ID=your_access_key_id
AWS_SECRET_ACCESS_KEY=your_secret_access_key
S3_BUCKET_NAME=your-bucket-name
S3_REGION=eu-north-1

Replace placeholders with your credentials.
Add .env to .gitignore.


Run Locally
bashpython app.py

Open http://127.0.0.1:5000/ in your browser to test.



Usage

Signup: Visit /signup to create an account.
Login: Use /login with your credentials.
Upload Files: Go to /upload and upload files (max 20MB).
Manage Files: On / (home), view, download, or delete files.
Search: Use /search to find files by name.
Forgot Password: Visit /forgot-password for OTP-based reset.
Logout: Use /logout.

Deployment
On Render

Push to GitHub
bashgit add .
git commit -m "Update for deployment"
git push origin main

Configure Render

Go to Render Dashboard.
Select or create a "Web Service".
Connect your GitHub repository.
Set:

Name: e.g., "filedrive-abye".
Runtime: Python.
Build Command: pip install -r requirements.txt.
Start Command: python app.py.


Add environment variables in the "Settings" tab (see Environment Variables).


Deploy

Click "Create Web Service" or "Manual Deploy".
Wait for the build to complete and access the URL.



Environment Variables
These must be set in .env for local testing and in Render dashboard for deployment:

DB_USER: MongoDB username
DB_PASS: MongoDB password
DB_CLUSTER: MongoDB cluster URL
DB_NAME: Database name
EMAIL_USER: Gmail address
EMAIL_PASS: Gmail app-specific password
SECRET_KEY: Application secret key
AWS_ACCESS_KEY_ID: AWS access key
AWS_SECRET_ACCESS_KEY: AWS secret key
S3_BUCKET_NAME: Your S3 bucket name
S3_REGION: eu-north-1 (Europe Stockholm)

File Structure
textFileDrive/
├── app.py            # Main Flask application
├── requirements.txt  # Python dependencies
├── .env             # Environment variables (not in Git)
├── .gitignore        # Ignored files
├── templates/        # HTML templates
│   ├── base.html     # Base layout
│   ├── home.html     # Dashboard
│   ├── login.html    # Login page
│   ├── signup.html   # Signup page
│   ├── upload.html   # Upload form
│   ├── search.html   # Search page
│   ├── forgot_password.html  # Forgot password
│   └── reset_password.html   # Reset password
├── uploads/          # Local file storage (auto-created)
└── static/           # css/style.css

S3 Bucket Details

Size Limit: No upper limit on bucket size; depends on your storage needs.
Object Limit: Individual files up to 5TB.
Cost: Approx $0.023 per GB per month (eu-north-1, 2025 rates). Monitor via AWS Console.
Region: Europe (Stockholm) eu-north-1.

Contributing

Fork the repository.
Create a feature branch (git checkout -b feature-name).
Commit changes (git commit -m "Add feature").
Push and create a pull request.


Contact
Author: Rajneesh Dubey
Email: itsrajneeshdubey@gmail.com